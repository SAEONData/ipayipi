% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/c6_phenomena_sts.R
\name{phenomena_sts}
\alias{phenomena_sts}
\title{Standardises data phenomena in 'ipayipi' format.}
\usage{
phenomena_sts(
  pipe_house = NULL,
  remove_dups = FALSE,
  external_phentab = NULL,
  prompt = FALSE,
  recurr = TRUE,
  wanted = NULL,
  unwanted = NULL,
  verbose = FALSE,
  xtra_v = FALSE,
  ...
)
}
\arguments{
\item{pipe_house}{List of pipeline directories. \strong{See} \code{\link[=ipip_house]{ipip_house()}} \strong{for details}.}

\item{remove_dups}{Logical. If true then a prompt is used to facilitate the removal of duplicate phenomena. Files with duplicate phenomena names will not be processed into a pipeline until the issue of duplication issue is resolved.}

\item{external_phentab}{File path to phenomena database. By default the function will search in the 'pipe_house' 'wait_room' for a phenomena database ('phentab'). If \code{external_phentab} is provided this option will override the 'pipe_house' default enabling access to another pipelines phenomena database.}

\item{prompt}{Set to TRUE for interactive mode. Note this will not work if embedded in a parallel processing instance.}

\item{recurr}{Should the function search recursively i.e., thorugh sub-folders as well - \code{TRUE}/\code{FALSE.}}

\item{wanted}{Regex string of files to select for listing. Seperate search tags by using the bar character '|'.}

\item{unwanted}{Regex string of files to filter out the listing. Seperate search tags by using the bar character '|'.
in the import.}

\item{verbose}{Logical. Print some details and progress of function progress?}

\item{xtra_v}{Logical. Should some 'x'tra messaging be done? Use to help diagnose problems, and for guidance.}
}
\description{
Standardise raw data inputs formats and more for the 'ipayipi' pipeline though an interactive process.
}
\details{
\subsection{General}{

The raw data formats, units, and offsets, in an 'ipayipi' station file are standardised using this function. The function keeps a record of phenomena (variable) metadata and uses this to implement transformations to standardise the data types. If 'new' phenomena are detected in the data then a csv file is generated and the user must fill in the 'blank' (NA) values. The most recently modified 'phentab' (phenomena table) csv will be imbibed by this function and used to update the pipelines 'phentab' database.
}

\subsection{Available standards}{

Available standards that ship with ipayipi can be assessed by calling \link{sts_phens}. If the phenomena names in the raw data align perfectly with these standards then \code{external_phentab} can be set to \code{ipayipi::sts_phens}.
}

\subsection{Standard details}{

The following phenomena (variable) metadata fields are allowed. Required fields are denoted with an asterix.
\enumerate{
\item *phen_name_full -- The full name of a phenomenon. This should be described as the phenomenon being recorded : then the measure (\emph{see measure}) used to estimate the phenomenon.
For example, "Atmospheric pressure: sample".
\item *phen_type -- The specific phenomenon being measured, e.g., "Atmospheric pressure".
\item *phen_name -- The shortened name of the phenomenon provided in lower case letters. These values will be used as the column header in the data, e.g., "atm_pressure_smp". \strong{Note no spaces. Only underscores}.
\item *units -- the units used to measure the phenomena. Within a pipeline the way the units are written must be exactly standarised.
\item *measure -- the type of measurement used to represent a single time series event of a phenomenon, e.g., a sample or 'smp' for short. Other measure types include; min, max, sd (standard deviation), tot (total), and avg (mean or average). A sample is an instantaneous measurement.
\item offset -- \strong{not yet implemented}.
\item f_convert -- a numeric multiplier for the phenomenon to be used for unit conversion or similar. If this is left as \code{NA} no factor conversion is performed on the 'raw_data'.
\item sensor_id -- the serial number of the sensor used to measure the phenomenon.
\item notes -- any pertinent notes on a specific phenomenon.
}
}

\subsection{Editing the phenomena table}{

When unrecognised synonyms are introduced (e.g., after a change in logger program setup, or 'new' variable from an additional station sensor) this function creates a csv table in the \code{wait_room} that should be edited to maintain a phenomena synonym database. Unstandardised phenomena metadata (columns) are preffixed by 'uz_'._ These unstandardised columns must not be edited by the user: standardised phenomena information can be added by replacing corresponding \code{NA} values with information. The required fields, marked with an asterix (above), must be described.
}

\subsection{Duplicate phenomena names:}{

Duplicate phenomena in a single data series table is not tolerated. If a duplicate phenomena name is detected a prompt will work with the user to delete the duplicate. Most logger programmes avoid generating duplicates, but the situation can arise where perhaps a table is recording the same phenomenon multiple times.

##_Other
A number of other phenomena standardisation proceedures are included here:
\itemize{
\item '\emph{Interference events}': Some logger files, e.g., hobo data logger files include useful columns that describe what within the ipayipi pipeline are termed 'logger interference events'. Logger interference events include events such as manual logger data downloads where the logger, or related data recording mechanism is 'interfered' with, and consequently, data near the time of interference may be altered undesirably. In hobo files interference column data are generally called 'logged' events, but spelling and capitalisation of this may change depending on the data. As part of the phenomena standardisation process, all interference events are marked in the data as 'logged'. Any column/phenomena in the data with the key 'interfere' will be marked as an 'interference' column. Therefore, when selecting phenomena names, take care to include the key 'interfere' so that the column is treated as recording 'interference' events.
}
}

\subsection{Special characters/phrases}{
\itemize{
\item '_sn' appended to the 'phen_name' denotes a 'sensor' number. Columns with this suffix are not aggregated during processing.
}
}

\subsection{File extensions}{
\itemize{
\item The input file extension is ".iph".
\item The output file extension is ".ipi".
}
}
}
\author{
Paul J. Gordijn
}
\keyword{automatic}
\keyword{batch}
\keyword{data;}
\keyword{file}
\keyword{process;}
\keyword{series}
\keyword{standardisation;}
\keyword{standardise}
\keyword{station;}
\keyword{time}
\keyword{transform}
\keyword{variables}
\keyword{variables;}
\keyword{weather}
