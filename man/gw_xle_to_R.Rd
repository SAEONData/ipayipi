% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gw_c_sub_xle_to_R.r
\name{gw_xle_to_R}
\alias{gw_xle_to_R}
\title{Convert xle to R data}
\usage{
gw_xle_to_R(
  xlefile = NULL,
  save_rdta = FALSE,
  filename = NULL,
  overwrite = FALSE,
  app_dates = TRUE,
  app_data = FALSE,
  input_dir = ".",
  output_dir = ".",
  transfer_log = FALSE
)
}
\arguments{
\item{xlefile}{xle file to convert into R format. Requires that the xle file
has been standardised by the pipeline functions xle_import, xle_nomenclature
, xle_rename and xle_transfer.}

\item{save_rdta}{Logical. Save the data in RDS format.}

\item{filename}{Desired output RDS filename.}

\item{overwrite}{Overwrite existing files with the same name? Logical.}

\item{app_dates}{If the filename is null the file name of the output object
will be automatically generated. If this logical parameter is set to TRUE,
the start and end dates of the data logger file will be appended to the
automatically generated file name.}

\item{app_data}{Do you want to append this data to an existing file from the
same station? Logical, defaults to TRUE.}

\item{input_dir}{Data where the standardised xle files are stored. I the
pipeline this is the "nomvet" folder.}

\item{output_dir}{Folder where the output RDS files are saved too.}

\item{transfer_log}{Logical. Generate a log of which files have been
converted.}
}
\value{
R environment data file.
}
\description{
A function that converts xle solonist files into R objects.
}
\details{
The conversion produces a list object with appropriate logger
metadata plus the continuous data stored on the logger.  Some design
functionality of this function must be recognised as being inspired by the
ecoflux package. The nuance here being that the final object is stored as a
customised native R object plus a lot more standardisation of the data is
performed. An optional log is also created which is used for file managment.
Note that the \strong{measurement units} are standardised in this funciton to the
SI system. Other units could be incorporated in the code as and when needed.
Currently only psi units are converted to kPa (applies to barologger files).

The R object created contains all logger metadata. The class of the R object
is either "baro_file" for level loggers or "level_file" for water level log
files. Files are classes based on the phenomena units.
The user can choose whether to save the file to rds format the default file
name is generated automatically, however this may be overwritten with a
custom file name.
}
\author{
Paul J Gordijn
}
\keyword{convert}
\keyword{file}
