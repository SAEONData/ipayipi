% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/y_b_imbibe_raw_logger_dt.R
\name{imbibe_raw_logger_dt}
\alias{imbibe_raw_logger_dt}
\title{Imbibes logger data exports}
\usage{
imbibe_raw_logger_dt(
  pipe_house = NULL,
  file_path = NULL,
  file_ext = NULL,
  col_dlm = NULL,
  dt_format = c("Ymd HMOS", "Ymd HMS", "Ymd IMOSp", "Ymd IMSp", "ymd HMOS", "ymd HMS",
    "ymd IMOSp", "ymd IMSp", "mdY HMOS", "mdY HMS", "mdy HMOS", "mdy HMS", "mdy IMOSp",
    "mdy IMSp", "dmY HMOS", "dmY HMS", "dmy HMOS", "dmy HMS", "dmy IMOSp", "dmy IMSp"),
  dt_tz = "Africa/Johannesburg",
  record_interval_type = "continuous",
  max_rows = 1000,
  data_setup = NULL,
  remove_prompt = FALSE,
  logg_interfere_type = "on_site",
  verbose = FALSE,
  xtra_v = FALSE,
  ...
)
}
\arguments{
\item{pipe_house}{List of pipeline directories. \emph{See} \code{\link[=ipip_house]{ipip_house()}} \emph{for details}.}

\item{file_path}{Path and name of file (excluding the file extension).}

\item{file_ext}{The file extension defaults of the raw logger data files. This can be left as \code{NULL} so 'all' files but those with extensions that cannot be imbibed (".ipr|.ipi|.iph|.xls|.rps|.rns|.ods|.doc").}

\item{col_dlm}{The column delimter which is fed to \code{\link[data.table:fread]{data.table::fread()}}. Defaults to NULL. When \code{NULL} the function uses \code{data.table::fread} ability to 'guess' the delimeter.}

\item{dt_format}{The function attempts to work out the date-time format from a vector of format types supplied to this argument. The testing is done via \code{\link[lubridate:parse_date_time]{lubridate::parse_date_time()}}. \code{\link[lubridate:parse_date_time]{lubridate::parse_date_time()}} prioritizes the tesing of date-time formats in the order vector of formats supplied. The default vector of date-time formats supplied should work well for most logger outputs. \bold{NB!} seconds are required.}

\item{dt_tz}{Recognized time-zone (character string) of the data locale. The default for the package is South African, i.e., "Africa/Johannesburg" which is equivalent to "SAST".}

\item{record_interval_type}{If there are is no discrete record interval set in the logger program, i.e., the sampling is event-based, then this parameter must be set to "event_based". By default this function has this parameter set to "continuous", but the record interval is scrutinized by \code{\link[=record_interval_eval]{record_interval_eval()}} --- see the help files for this function for more information.
The parameter supplied here is only used if there is only one data record and the record interval cannot be evaluated by \code{\link[=record_interval_eval]{record_interval_eval()}}.}

\item{max_rows}{The number of rows to use when evaluating the record interval. Argument is parsed to \code{\link[=record_interval_eval]{record_interval_eval()}}.}

\item{data_setup}{List of options used to extract data and metadata from instrument data outputs. These arguments are parsed to \code{\link[=imbibe_raw_flat]{imbibe_raw_flat()}}.}

\item{remove_prompt}{Logical; passed to \code{\link[=record_interval_eval]{record_interval_eval()}}. Activate a readline prompt to choose whether or not filter our records from \code{dta_in} with inconsistent record intervals.}

\item{logg_interfere_type}{Two options here: "remote" or "on_site". Each time a logger is visited is counted as a logger interference event. Type \emph{'remote'} occurs when data is downloaded remotely. Type _'on_site'_is when data was downloaded on site. \emph{See} \code{\link[=imbibe_raw_logger_dt]{imbibe_raw_logger_dt()}}.}

\item{verbose}{Logical. Print some details and progress of function progress?}

\item{xtra_v}{Logical. Should some 'x'tra messaging be done? Use to help diagnose problems, and for guidance.}
}
\value{
A list of class "ipayipi_raw_data" that contains a 'data_summary', 'phens' (phenomena), and 'raw_data' tables (data.table).
}
\description{
Function to read in 'flat' loggers files into R. A first step towards processing data in \code{ipayipi}.
}
\details{
\strong{See} \code{\link[=imbibe_raw_batch]{imbibe_raw_batch()}}.
}
\author{
Paul J. Gordijn
}
