% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sub_dta_flat_pull.R
\name{dta_flat_pull}
\alias{dta_flat_pull}
\title{Pulls continuous data for a phenomena}
\usage{
dta_flat_pull(
  input_dir = ".",
  pipe_house = NULL,
  tbl_names = NULL,
  phen_name = NULL,
  start_dttm = NULL,
  end_dttm = NULL,
  wide = TRUE,
  ri = NULL,
  output_dir = NULL,
  wanted = NULL,
  unwanted = NULL,
  out_csv = FALSE,
  out_tab_name = NULL,
  out_csv_preffix = "",
  recurr = TRUE,
  prompt = FALSE,
  verbose = FALSE,
  xtra_v = FALSE,
  chunk_v = FALSE,
  gaps = FALSE,
  dt_format = c("Ymd HMOS", "Ymd HMS", "Ymd IMOSp", "Ymd IMSp", "ymd HMOS", "ymd HMS",
    "ymd IMOSp", "ymd IMSp", "mdY HMOS", "mdY HMS", "mdy HMOS", "mdy HMS", "mdy IMOSp",
    "mdy IMSp", "dmY HMOS", "dmY HMS", "dmy HMOS", "dmy HMS", "dmy IMOSp", "dmy IMSp"),
  dt_tz = "Africa/Johannesburg",
  ...
)
}
\arguments{
\item{input_dir}{The directory in which to search for stations form which to extract time-series data.}

\item{pipe_house}{If the \code{pipe_house} argument is provided the \code{pipe_house$ipip_room} will be used instead of the \code{input_dir}.}

\item{tbl_names}{Vector of table names in a station files from which to extract data. Add items to the vector such that only the first matching table from a station is selected. Table names are selected via the \code{\%in\%} argument.}

\item{phen_name}{The field/column/name of the phenomena which to join into a single data table.}

\item{wide}{Logical. If FALSE output data will be pivoted to wide format. Defaults to TRUE.}

\item{ri}{Record-interval string. This function will guess the record interval used to generate a flat table. However, the guess may not be possible if there is insufficient data.}

\item{output_dir}{The output directory where an output csv file is saved.}

\item{wanted}{A strong containing keywords to use to filter which stations are selected for processing. Multiple search kewords should be seperated with a bar ('|'), and spaces avoided unless part of the keyword.}

\item{unwanted}{Similar to wanted, but keywords for filtering out unwanted stations.}

\item{out_csv}{Logical. If TRUE a csv file is exported to the output directory.}

\item{out_tab_name}{If left \code{NULL} (default), the output table name will be \code{paste0(out_csv_preffix, '_', ri)}, where ri is determined using the \code{ipayipi::sts_interval_name()} or provided by the \code{ri} argument.}

\item{out_csv_preffix}{Preffix for the output csv file. The phenomena name and then time interval by which the data are summarised are used as a suffix.}

\item{recurr}{Whether to search recursively through folders. Defaults to TRUE.}

\item{prompt}{Logical. If \code{TRUE} a prompt will be called so that the user can interactively select station files.}

\item{verbose}{Whether to report on progress. Logical.}

\item{xtra_v}{Extra verbose. Logical.}

\item{chunk_v}{More messages when chunking data? Logical.}

\item{gaps}{If \code{TRUE} then gap info is printed if out_csv functionality is enabled.}

\item{dt_format}{The function attempts to work out the date-time format from a vector of format types supplied to this argument. The testing is done via \code{lubridate::parse_date_time()}. \code{lubridate::parse_date_time()} prioritizes the tesing of date-time formats in the order vector of
formats supplied. The default vector of date-time formats supplied should work well for most logger outputs.}

\item{dt_tz}{Recognized time-zone (character string) of the data locale. The default for the package is South African, i.e., "Africa/Johannesburg" which is equivalent to "SAST".}

\item{file_ext}{The extension of the stations from where data will be extracted. Defaults to ".ipip".}
}
\value{
A list containing 1) the summarised data in a single data.table, 2) a logical table indicating data gaps, 3) a character string representing the time interval by which the data has been summarised, 4) the list of stations used for the summary, 5) the name of the table and the name of the field for which data was summarised, 6) Filter table results from data processing using \code{dt_clean}, & 7) the station file extension uesd for querying data.
}
\description{
Queries \strong{continuous} data of a single variable/phenomena; common record interval, from multiple stations; query in 'long' or 'wide' formats. Use \code{\link[=dta_flat_pull_discnt]{dta_flat_pull_discnt()}} or \code{\link[=ipayipi2csv]{ipayipi2csv()}} to query and/or export discontinuous data.
}
\author{
Paul J. Gordijn
}
\keyword{data}
\keyword{data;}
\keyword{long-format}
\keyword{pipeline;}
\keyword{query.}
\keyword{summarise}
\keyword{time-series}
\keyword{wide-format}
